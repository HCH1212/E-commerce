name: Run

on:
  push:
    branches:
      - main
      - test
      - hch
  pull_request:
    branches:
      - main
      - test

env:
  HOST: 154.37.220.49  # 部署的服务器地址
  USER: root # 部署的服务器用户名
  GOPROXY: https://goproxy.cn,direct
  PRIVATE_KEY: ${{ secrets.SSH_KEY }} # 部署的服务器私钥
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKERHUB_USER }} # Docker Hub 用户名
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }} # Docker Hub 访问令牌

jobs:
  # 第一个 Job: 编译代码
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.23'

      - name: Install dependencies
        run: |
          make docker

  # 第二个 Job: 构建 Docker 镜像
  docker-build:
    runs-on: ubuntu-latest
    needs: build  # 依赖第一个 Job

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USER }}/frontend:latest .

  # 第三个 Job: 推送 Docker 镜像到 Docker Hub
  docker-push:
    runs-on: ubuntu-latest
    needs: docker-build  # 依赖第二个 Job

    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKERHUB_USER }}/frontend:latest

  # 第四个 Job: 通过 SSH 在远程服务器上拉取镜像并部署
  deploy:
    runs-on: ubuntu-latest
    needs: docker-push  # 依赖第三个 Job

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: SSH to deploy server and pull new image
        run: |
          ssh -o StrictHostKeyChecking=no ${USER}@${HOST} << 'EOF'
            docker pull ${DOCKER_HUB_USERNAME}/frontend:latest
            docker stop frontend || true
            docker rm frontend || true
            docker run -d --name frontend -p 80:80 ${DOCKER_HUB_USERNAME}/frontend:latest
          EOF
